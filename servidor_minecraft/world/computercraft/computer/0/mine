rednet.open("left")

-- ocueyes mining code (c) 2023

-- note, y and x are relitive of 
-- starting position, not gps



-- start y pos to mine (relitive)
local y=0

-- start x pos to mine (relitive)
local x=0

-- y pos to move to next x pos and clear y
local ymax= 99

-- time to wait for hopper to clear inventory
 local invc = 10



function clear()
for m=1,10 do
for i=1,10 do
rednet.broadcast("min","pkt")
rednet.broadcast(i+(m*10),"pro")
rednet.broadcast(y,"pro")
turtle.dig() 
turtle.suck()
turtle.forward()
turtle.digUp()
turtle.suckUp()
turtle.digDown()
turtle.suckDown()
end
for i=1,10 do
turtle.back()
end
turtle.turnLeft()
turtle.dig()
turtle.suck()
turtle.forward()
turtle.turnRight()
end
turtle.turnRight()
for i=1,10 do
turtle.forward()
end
turtle.turnLeft()
end

while true do
turtle.back()

rednet.broadcast("docking","pkt") 
for i=1,16 do
turtle.select(i)
turtle.dropDown()
end

turtle.forward()
turtle.suckDown()
turtle.refuel()
turtle.dig()
turtle.suck()
turtle.forward()


turtle.turnLeft()
if y >= ymax then
y = 0
x = x + 10
end


for i=1,x do
turtle.dig()
turtle.suck()
turtle.forward()
end
turtle.turnRight()


for i=1,y do
rednet.broadcast("bacefro","pkt")
rednet.broadcast(i,"pro")
rednet.broadcast(y,"pro")
turtle.digDown()
turtle.down()
end
clear() 
for i=1,y do
turtle.up()
rednet.broadcast("baceto","pkt")
rednet.broadcast(i,"pro")
rednet.broadcast(y,"pkt")
end

y = y + 3

turtle.turnRight()
for i=1,x do
turtle.forward()
end
turtle.turnLeft()
turtle.back()
end
